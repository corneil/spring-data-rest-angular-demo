plugins {
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'

description = 'Spring Data Rest Angular Demo - Combined App'
configurations {
    providedRuntime
    asciidoctor
}

ext {
    snippetsDir = file('build/generated-snippets')
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    doFirst {
        manifest {
            attributes('Manifest-Version': '1.0',
                    'Created-By': manifestVendor,
                    'Specification-Title': description,
                    'Specification-Version': version,
                    'Specification-Vendor': manifestVendor,
                    'Implementation-Title': description,
                    'Implementation-Version': version,
                    'Implementation-Vendor': manifestVendor
            )
        }
    }
}

dependencies {
    compile project(':common-web')
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.data:spring-data-rest-hal-browser'
    compile 'org.springframework.boot:spring-boot-starter-hateoas'

    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'net.sourceforge.nekohtml:nekohtml'

    compile 'org.springframework.boot:spring-boot-starter-hateoas'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.projectlombok:lombok'
    compile 'io.springfox:springfox-swagger2'
    compile 'io.springfox:springfox-swagger-ui'
	// compile 'io.springfox.ui:springfox-swagger-ui-rfc6570:1.0.0'
	compile 'io.springfox:springfox-bean-validators'
	// compile 'io.springfox:springfox-data-rest'
    compile 'com.jayway.jsonpath:json-path'
    compile 'com.jayway.jsonpath:json-path-assert'
    compile 'ch.qos.logback:logback-classic'
    runtime 'org.atteo:evo-inflector:1.2.1'
    compile 'org.apache.httpcomponents:httpclient'
    compile 'org.slf4j:slf4j-ext'

    compile('commons-dbcp:commons-dbcp') {
        exclude(module: 'commons-logging')
        exclude(module: 'xml-apis')
    }

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    runtime 'com.h2database:h2'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile 'org.springframework.restdocs:spring-restdocs-core'
    testCompile 'junit:junit:4.12'
}

bootRepackage {
    mainClass = 'com.github.corneil.data_rest_demo.web.SpringDataRestAngularDemoApplication'
}

bootRun {
    addResources = true
}

eclipse {
    classpath {
        containers.remove 'org.eclipse.jdt.launching.JRE_CONTAINER'
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

test {
    outputs.dir snippetsDir
    testLogging.showStandardStreams = true
    jvmArgs "-DsnippetsDir=$snippetsDir"
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

task cleanTestJpa(type: Delete) {
    delete fileTree('/tmp/h2/') {
        include 'demo-rest.*db'
    }
}

cleanTest.dependsOn cleanTestJpa
